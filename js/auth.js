// –ú–æ–¥—É–ª—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const AuthSystem = {
    currentUser: null,
    selectedRole: null,

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    init() {
        ConfigUtils.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
        this.checkExistingAuth();
    },

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    checkExistingAuth() {
        const savedUser = Storage.get(CONFIG.STORAGE_KEYS.USER_DATA);

        if (savedUser && this.validateUser(savedUser)) {
            this.currentUser = savedUser;
            ConfigUtils.log('–ù–∞–π–¥–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', savedUser.firstName);
            return true;
        }

        return false;
    },

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    validateUser(user) {
        return user && user.id && user.firstName && user.role;
    },

    // –í—ã–±–æ—Ä —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    selectRole(role) {
        if (!Object.values(CONFIG.USER_ROLES).includes(role)) {
            ConfigUtils.error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ä–æ–ª—å:', role);
            return false;
        }

        this.selectedRole = role;

        // –í –¥–µ–±–∞–≥ —Ä–µ–∂–∏–º–µ —Å—Ä–∞–∑—É –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º
        if (CONFIG.DEV_MODE && !ConfigUtils.isTelegramApp()) {
            ConfigUtils.log('üîß –ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –¥–µ–±–∞–≥ —Ä–µ–∂–∏–º–µ –¥–ª—è —Ä–æ–ª–∏:', role);
            this.devModeAuth(role);
            return true;
        }

        // –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        this.showTelegramAuth();

        // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        TelegramApp.hapticFeedback('selection');

        ConfigUtils.log('–í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å:', role);
        return true;
    },

    // –ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–µ–±–∞–≥ —Ä–µ–∂–∏–º–∞
    devModeAuth(role) {
        const testUser = {
            id: CONFIG.DEV_USER.id,
            telegramId: CONFIG.DEV_USER.id,
            firstName: CONFIG.DEV_USER.first_name,
            lastName: CONFIG.DEV_USER.last_name || '',
            username: CONFIG.DEV_USER.username || '',
            role: role,
            languageCode: CONFIG.DEV_USER.language_code || 'ru',
            isPremium: false,
            photoUrl: '',
            registeredAt: new Date().toISOString(),
            referralCode: this.generateReferralCode(CONFIG.DEV_USER.id),
            referredBy: null
        };

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.currentUser = testUser;
        Storage.set(CONFIG.STORAGE_KEYS.USER_DATA, testUser);

        ConfigUtils.log('üîß –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', testUser);

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
        this.completeAuth();
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ Telegram
    showTelegramAuth() {
        const telegramUser = TelegramApp.getUserData();

        if (!telegramUser) {
            ConfigUtils.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram');
            TelegramApp.showAlert('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        this.displayUserInfo(telegramUser);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        document.getElementById('telegram-auth').style.display = 'block';

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        const confirmBtn = document.getElementById('confirm-auth');
        confirmBtn.onclick = () => this.confirmAuth(telegramUser);

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        document.getElementById('telegram-auth').classList.add('fade-in');
    },

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    displayUserInfo(telegramUser) {
        const avatarEl = document.getElementById('user-avatar');
        const infoEl = document.getElementById('user-info');

        // –ê–≤–∞—Ç–∞—Ä (–∏–Ω–∏—Ü–∏–∞–ª—ã –µ—Å–ª–∏ –Ω–µ—Ç —Ñ–æ—Ç–æ)
        if (telegramUser.photoUrl) {
            avatarEl.innerHTML = `<img src="${telegramUser.photoUrl}" alt="Avatar" style="width: 100%; height: 100%; border-radius: 50%; object-fit: cover;">`;
        } else {
            const initials = this.getInitials(telegramUser.firstName, telegramUser.lastName);
            avatarEl.textContent = initials;
        }

        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        const fullName = [telegramUser.firstName, telegramUser.lastName].filter(Boolean).join(' ');
        const roleText = this.selectedRole === CONFIG.USER_ROLES.TAROT ? '–¢–∞—Ä–æ–ª–æ–≥' : '–ö–ª–∏–µ–Ω—Ç';

        infoEl.innerHTML = `
            <h4>${fullName}</h4>
            <p>@${telegramUser.username || '–±–µ–∑ username'}</p>
            <p>–†–æ–ª—å: <strong>${roleText}</strong></p>
        `;
    },

    // –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª—ã
    getInitials(firstName, lastName) {
        const first = firstName ? firstName.charAt(0).toUpperCase() : '';
        const last = lastName ? lastName.charAt(0).toUpperCase() : '';
        return first + last || '?';
    },

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    confirmAuth(telegramUser) {
        ConfigUtils.log('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', telegramUser.id);

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = {
            id: telegramUser.id,
            telegramId: telegramUser.id,
            firstName: telegramUser.firstName,
            lastName: telegramUser.lastName,
            username: telegramUser.username,
            role: this.selectedRole,
            languageCode: telegramUser.languageCode,
            isPremium: telegramUser.isPremium,
            photoUrl: telegramUser.photoUrl,
            registeredAt: new Date().toISOString(),
            referralCode: this.generateReferralCode(telegramUser.id),
            referredBy: TelegramApp.getReferralCode() // –ö—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª
        };

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.currentUser = user;
        Storage.set(CONFIG.STORAGE_KEYS.USER_DATA, user);

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
        this.processReferral();

        // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        TelegramApp.hapticFeedback('success');

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
        this.completeAuth();

        ConfigUtils.log('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.firstName);
    },

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
    generateReferralCode(userId) {
        // –ü—Ä–æ—Å—Ç–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const base = userId.toString();
        const hash = this.simpleHash(base);
        return `${base}_${hash}`;
    },

    // –ü—Ä–æ—Å—Ç–∞—è —Ö–µ—à-—Ñ—É–Ω–∫—Ü–∏—è
    simpleHash(str) {
        let hash = 0;
        for (let i = 0; i < str.length; i++) {
            const char = str.charCodeAt(i);
            hash = ((hash << 5) - hash) + char;
            hash = hash & hash; // Convert to 32-bit integer
        }
        return Math.abs(hash).toString(36).substring(0, 6);
    },

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    processReferral() {
        const referralCode = TelegramApp.getReferralCode();

        if (referralCode && referralCode !== this.currentUser.referralCode) {
            ConfigUtils.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ –æ—Ç:', referralCode);

            // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª
            const referrer = this.findUserByReferralCode(referralCode);

            if (referrer) {
                // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–Ω—É—Å –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
                ReferralSystem.addReferral(referrer.id, this.currentUser.id);

                // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ —Å–∫–∏–¥–∫–µ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                TelegramApp.showPopup(
                    '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!',
                    `–í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–∫–∏–¥–∫—É ${CONFIG.REFERRAL_SETTINGS.REFERRAL_DISCOUNT}% –Ω–∞ –ø–µ—Ä–≤—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –±–ª–∞–≥–æ–¥–∞—Ä—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!`
                );
            }
        }
    },

    // –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–º—É –∫–æ–¥—É
    findUserByReferralCode(referralCode) {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        // –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        const allUsers = Storage.get('all_users') || [];
        return allUsers.find(user => user.referralCode === referralCode);
    },

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    completeAuth() {
        ConfigUtils.log('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é');

        // –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        document.getElementById('auth-screen').classList.remove('active');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        document.getElementById('main-app').classList.add('active');

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
        this.initRoleBasedInterface();

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        this.setupNavigation();
    },

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    initRoleBasedInterface() {
        const isClient = this.currentUser.role === CONFIG.USER_ROLES.CLIENT;
        const isTarot = this.currentUser.role === CONFIG.USER_ROLES.TAROT;

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        const clientView = document.getElementById('client-booking');
        const tarotView = document.getElementById('tarot-admin');

        if (isClient) {
            clientView.style.display = 'block';
            tarotView.style.display = 'none';
            BookingSystem.init();
        } else if (isTarot) {
            clientView.style.display = 'none';
            tarotView.style.display = 'block';
            AdminPanel.init();
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã –¥–ª—è –≤—Å–µ—Ö
        ProfileManager.init();
        ReferralSystem.init();
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    setupNavigation() {
        const navButtons = document.querySelectorAll('.nav-btn');

        navButtons.forEach(btn => {
            btn.addEventListener('click', (e) => {
                const tabName = e.currentTarget.dataset.tab;
                this.switchTab(tabName);

                // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
                TelegramApp.hapticFeedback('selection');
            });
        });
    },

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    switchTab(tabName) {
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏ –≤–∫–ª–∞–¥–æ–∫
        document.querySelectorAll('.nav-btn').forEach(btn => btn.classList.remove('active'));
        document.querySelectorAll('.tab-content').forEach(tab => tab.classList.remove('active'));

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');
        document.getElementById(`${tabName}-tab`).classList.add('active');

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∫–ª–∞–¥–∫–∏
        switch (tabName) {
            case 'booking':
                if (this.currentUser.role === CONFIG.USER_ROLES.CLIENT) {
                    BookingSystem.loadAvailableSlots();
                } else {
                    AdminPanel.loadBookings();
                }
                break;
            case 'profile':
                ProfileManager.loadProfile();
                break;
            case 'referral':
                ReferralSystem.loadReferralData();
                break;
        }

        ConfigUtils.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É:', tabName);
    },

    // –í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
    logout() {
        TelegramApp.showConfirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?', (confirmed) => {
            if (confirmed) {
                // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                Storage.clear();
                this.currentUser = null;
                this.selectedRole = null;

                // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —ç–∫—Ä–∞–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                document.getElementById('main-app').classList.remove('active');
                document.getElementById('auth-screen').classList.add('active');

                ConfigUtils.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
                TelegramApp.hapticFeedback('success');
            }
        });
    },

    // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getCurrentUser() {
        return this.currentUser;
    },

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    hasRole(role) {
        return this.currentUser && this.currentUser.role === role;
    },

    // –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updateUser(updates) {
        if (!this.currentUser) return false;

        this.currentUser = { ...this.currentUser, ...updates };
        Storage.set(CONFIG.STORAGE_KEYS.USER_DATA, this.currentUser);

        ConfigUtils.log('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
        return true;
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
window.AuthSystem = AuthSystem;