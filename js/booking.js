// –ú–æ–¥—É–ª—å —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø–∏—Å–µ–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
const BookingSystem = {
    selectedSlot: null,

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init() {
        ConfigUtils.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–ø–∏—Å–µ–π');
        this.loadAvailableSlots();
    },

    // –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
    loadAvailableSlots() {
        const container = document.getElementById('available-slots');
        if (!container) {
            ConfigUtils.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä available-slots –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        const availableSlots = TimeSlotStorage.getAvailable();
        ConfigUtils.log('–ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤:', availableSlots.length);

        if (availableSlots.length === 0) {
            container.innerHTML = `
                <div style="text-align: center; padding: 40px; color: #666;">
                    <div style="font-size: 3rem; margin-bottom: 20px;">üìÖ</div>
                    <h3>–°–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∫–∞ –Ω–µ—Ç</h3>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ —Å–≤–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–µ –∑–∞–ø–∏—Å–∏</p>
                </div>
            `;
            return;
        }

        container.innerHTML = availableSlots.map(slot =>
            Components.createTimeSlot(slot)
        ).join('');

        ConfigUtils.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    },

    // –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç
    selectTimeSlot(slotId) {
        const slot = TimeSlotStorage.findById(slotId);
        if (!slot) {
            ConfigUtils.error('–°–ª–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', slotId);
            return;
        }

        if (slot.status !== CONFIG.SLOT_STATUS.AVAILABLE) {
            TelegramApp.showAlert('–≠—Ç–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç —É–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return;
        }

        this.selectedSlot = slot;
        ConfigUtils.log('–í—ã–±—Ä–∞–Ω —Å–ª–æ—Ç:', slot);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –∑–∞–ø–∏—Å–∏
        this.showBookingForm(slot);

        // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
        TelegramApp.hapticFeedback('selection');
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ä–º—É –∑–∞–ø–∏—Å–∏
    showBookingForm(slot) {
        const formContainer = document.getElementById('booking-form');
        if (!formContainer) {
            ConfigUtils.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä booking-form –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        formContainer.innerHTML = Components.createBookingForm(slot);
        formContainer.style.display = 'block';

        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ñ–æ—Ä–º–µ
        formContainer.scrollIntoView({ behavior: 'smooth' });

        ConfigUtils.log('–§–æ—Ä–º–∞ –∑–∞–ø–∏—Å–∏ –ø–æ–∫–∞–∑–∞–Ω–∞');
    },

    // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
    submitBooking(slotId) {
        const name = document.getElementById('client-name')?.value?.trim();
        const contact = document.getElementById('client-contact')?.value?.trim();
        const question = document.getElementById('client-question')?.value?.trim();
        const suggestedTime = document.getElementById('suggested-time')?.value;

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name) {
            TelegramApp.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è');
            return;
        }

        if (!contact) {
            TelegramApp.showAlert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–ª–æ—Ç –µ—â–µ –¥–æ—Å—Ç—É–ø–µ–Ω
        const slot = TimeSlotStorage.findById(slotId);
        if (!slot || slot.status !== CONFIG.SLOT_STATUS.AVAILABLE) {
            TelegramApp.showAlert('–í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è.');
            this.loadAvailableSlots();
            this.cancelBooking();
            return;
        }

        const currentUser = AuthSystem.getCurrentUser();
        if (!currentUser) {
            ConfigUtils.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
            return;
        }

        // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
        const booking = {
            clientId: currentUser.id,
            clientName: name,
            clientContact: contact,
            slotId: slotId,
            consultationType: 'online', // –¢–æ–ª—å–∫–æ –æ–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
            question: question || '',
            suggestedTime: suggestedTime || null,
            tarotId: this.findTarotId() // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —ç—Ç–æ –±—É–¥–µ—Ç –∏–∑ —Å–ª–æ—Ç–∞
        };

        try {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å
            const savedBooking = BookingStorage.add(booking);

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–ª–æ—Ç–∞
            TimeSlotStorage.update(slotId, { status: CONFIG.SLOT_STATUS.PENDING });

            ConfigUtils.log('–ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞:', savedBooking);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            TelegramApp.showAlert('–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –¢–∞—Ä–æ–ª–æ–≥ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');

            // –¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
            TelegramApp.hapticFeedback('success');

            // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ª–æ—Ç—ã
            this.cancelBooking();
            this.loadAvailableSlots();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
            Components.showNotification('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', 'success');

        } catch (error) {
            ConfigUtils.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏:', error);
            TelegramApp.showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
            TelegramApp.hapticFeedback('error');
        }
    },

    // –ù–∞–π—Ç–∏ ID —Ç–∞—Ä–æ–ª–æ–≥–∞ (–ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
    findTarotId() {
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–∏—Å–∫ —Ç–∞—Ä–æ–ª–æ–≥–∞
        // —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å–ª–æ—Ç–æ–º
        return 987654321; // –¢–µ—Å—Ç–æ–≤—ã–π ID
    },

    // –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å
    cancelBooking() {
        const formContainer = document.getElementById('booking-form');
        if (formContainer) {
            formContainer.style.display = 'none';
            formContainer.innerHTML = '';
        }

        this.selectedSlot = null;
        ConfigUtils.log('–§–æ—Ä–º–∞ –∑–∞–ø–∏—Å–∏ —Å–∫—Ä—ã—Ç–∞');

        // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ —Å–ª–æ—Ç–æ–≤
        document.querySelectorAll('.time-slot.selected').forEach(slot => {
            slot.classList.remove('selected');
        });
    },

    // –ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUserBookings() {
        const currentUser = AuthSystem.getCurrentUser();
        if (!currentUser) {
            return [];
        }

        return BookingStorage.getUserBookings(currentUser.id);
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–ø–∏—Å–µ–π
    showBookingHistory() {
        const bookings = this.getUserBookings();

        if (bookings.length === 0) {
            return `
                <div style="text-align: center; padding: 40px; color: #666;">
                    <div style="font-size: 3rem; margin-bottom: 20px;">üìã</div>
                    <h3>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π</h3>
                    <p>–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</p>
                </div>
            `;
        }

        return bookings.map(booking => Components.createBookingCard(booking)).join('');
    },

    // –û—Ç–º–µ–Ω–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å
    cancelExistingBooking(bookingId) {
        TelegramApp.showConfirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?', (confirmed) => {
            if (confirmed) {
                const booking = BookingStorage.findById(bookingId);
                if (booking) {
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Å–∏
                    BookingStorage.update(bookingId, { status: CONFIG.BOOKING_STATUS.CANCELLED });

                    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç
                    if (booking.slotId) {
                        TimeSlotStorage.update(booking.slotId, { status: CONFIG.SLOT_STATUS.AVAILABLE });
                    }

                    ConfigUtils.log('–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞:', bookingId);
                    TelegramApp.showAlert('–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞');
                    TelegramApp.hapticFeedback('success');

                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                    this.loadAvailableSlots();
                    Components.showNotification('–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞', 'success');
                }
            }
        });
    },

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å
    canCancelBooking(booking) {
        if (booking.status !== CONFIG.BOOKING_STATUS.PENDING &&
            booking.status !== CONFIG.BOOKING_STATUS.CONFIRMED) {
            return false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è (–º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –º–∏–Ω–∏–º—É–º –∑–∞ —á–∞—Å)
        const slot = TimeSlotStorage.findById(booking.slotId);
        if (slot) {
            const slotStart = new Date(slot.start);
            const now = new Date();
            const diffHours = (slotStart - now) / (1000 * 60 * 60);

            return diffHours >= 1; // –ú–∏–Ω–∏–º—É–º —á–∞—Å –¥–æ –Ω–∞—á–∞–ª–∞
        }

        return true;
    },

    // –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è
    suggestAlternativeTime() {
        const now = new Date();
        const tomorrow = new Date(now);
        tomorrow.setDate(tomorrow.getDate() + 1);
        tomorrow.setHours(14, 0, 0, 0); // 14:00 –∑–∞–≤—Ç—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        const suggestedTimeInput = document.getElementById('suggested-time');
        if (suggestedTimeInput) {
            suggestedTimeInput.value = tomorrow.toISOString().slice(0, 16);
        }
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å
window.BookingSystem = BookingSystem;